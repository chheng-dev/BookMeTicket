{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRCode = void 0;\nvar isEqual = require(\"lodash.isequal\");\nvar qrGenerator = require(\"qrcode-generator\");\nvar React = require(\"react\");\nvar ReactDOM = require(\"react-dom\");\nvar QRCode = /** @class */function (_super) {\n  __extends(QRCode, _super);\n  function QRCode(props) {\n    var _this = _super.call(this, props) || this;\n    _this.canvas = React.createRef();\n    return _this;\n  }\n  QRCode.utf16to8 = function (str) {\n    var out = '',\n      i,\n      c;\n    var len = str.length;\n    for (i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n      if (c >= 0x0001 && c <= 0x007F) {\n        out += str.charAt(i);\n      } else if (c > 0x07FF) {\n        out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n        out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      } else {\n        out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      }\n    }\n    return out;\n  };\n  /**\r\n   * Draw a rounded square in the canvas\r\n   */\n  QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\n    ctx.lineWidth = lineWidth;\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    // Adjust coordinates so that the outside of the stroke is aligned to the edges\n    y += lineWidth / 2;\n    x += lineWidth / 2;\n    size -= lineWidth;\n    if (!Array.isArray(radii)) {\n      radii = [radii, radii, radii, radii];\n    }\n    // Radius should not be greater than half the size or less than zero\n    radii = radii.map(function (r) {\n      r = Math.min(r, size / 2);\n      return r < 0 ? 0 : r;\n    });\n    var rTopLeft = radii[0] || 0;\n    var rTopRight = radii[1] || 0;\n    var rBottomRight = radii[2] || 0;\n    var rBottomLeft = radii[3] || 0;\n    ctx.beginPath();\n    ctx.moveTo(x + rTopLeft, y);\n    ctx.lineTo(x + size - rTopRight, y);\n    if (rTopRight) ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\n    ctx.lineTo(x + size, y + size - rBottomRight);\n    if (rBottomRight) ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\n    ctx.lineTo(x + rBottomLeft, y + size);\n    if (rBottomLeft) ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\n    ctx.lineTo(x, y + rTopLeft);\n    if (rTopLeft) ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\n    ctx.closePath();\n    ctx.stroke();\n    if (fill) {\n      ctx.fill();\n    }\n  };\n  /**\r\n   * Draw a single positional pattern eye.\r\n   */\n  QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\n    if (radii === void 0) {\n      radii = [0, 0, 0, 0];\n    }\n    var lineWidth = Math.ceil(cellSize);\n    var radiiOuter;\n    var radiiInner;\n    if (typeof radii !== 'number' && !Array.isArray(radii)) {\n      radiiOuter = radii.outer || 0;\n      radiiInner = radii.inner || 0;\n    } else {\n      radiiOuter = radii;\n      radiiInner = radiiOuter;\n    }\n    var colorOuter;\n    var colorInner;\n    if (typeof color !== 'string') {\n      colorOuter = color.outer;\n      colorInner = color.inner;\n    } else {\n      colorOuter = color;\n      colorInner = color;\n    }\n    var y = row * cellSize + offset;\n    var x = col * cellSize + offset;\n    var size = cellSize * 7;\n    // Outer box\n    this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx);\n    // Inner box\n    size = cellSize * 3;\n    y += cellSize * 2;\n    x += cellSize * 2;\n    this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\n  };\n  ;\n  /**\r\n   * Is this dot inside a positional pattern zone.\r\n   */\n  QRCode.prototype.isInPositioninZone = function (col, row, zones) {\n    return zones.some(function (zone) {\n      return row >= zone.row && row <= zone.row + 7 && col >= zone.col && col <= zone.col + 7;\n    });\n  };\n  QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\n    return pixelLength / cellSize;\n  };\n  QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\n    if (logoImage) {\n      var numberOfCellsMargin = 2;\n      var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\n      var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\n      var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\n      var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\n      return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\n      && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\n    } else {\n      return false;\n    }\n  };\n  QRCode.prototype.shouldComponentUpdate = function (nextProps) {\n    return !isEqual(this.props, nextProps);\n  };\n  QRCode.prototype.componentDidMount = function () {\n    this.update();\n  };\n  QRCode.prototype.componentDidUpdate = function () {\n    this.update();\n  };\n  QRCode.prototype.update = function () {\n    var _a = this.props,\n      value = _a.value,\n      ecLevel = _a.ecLevel,\n      enableCORS = _a.enableCORS,\n      size = _a.size,\n      quietZone = _a.quietZone,\n      bgColor = _a.bgColor,\n      fgColor = _a.fgColor,\n      logoImage = _a.logoImage,\n      logoWidth = _a.logoWidth,\n      logoHeight = _a.logoHeight,\n      logoOpacity = _a.logoOpacity,\n      removeQrCodeBehindLogo = _a.removeQrCodeBehindLogo,\n      qrStyle = _a.qrStyle,\n      eyeRadius = _a.eyeRadius,\n      eyeColor = _a.eyeColor;\n    var qrCode = qrGenerator(0, ecLevel);\n    qrCode.addData(QRCode.utf16to8(value));\n    qrCode.make();\n    var canvas = ReactDOM.findDOMNode(this.canvas.current);\n    var ctx = canvas.getContext('2d');\n    var canvasSize = +size + 2 * +quietZone;\n    var length = qrCode.getModuleCount();\n    var cellSize = size / length;\n    var scale = window.devicePixelRatio || 1;\n    canvas.height = canvas.width = canvasSize * scale;\n    ctx.scale(scale, scale);\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n    var offset = +quietZone;\n    var dWidthLogo = logoWidth || size * 0.2;\n    var dHeightLogo = logoHeight || dWidthLogo;\n    var dxLogo = (size - dWidthLogo) / 2;\n    var dyLogo = (size - dHeightLogo) / 2;\n    var positioningZones = [{\n      row: 0,\n      col: 0\n    }, {\n      row: 0,\n      col: length - 7\n    }, {\n      row: length - 7,\n      col: 0\n    }];\n    ctx.strokeStyle = fgColor;\n    if (qrStyle === 'dots') {\n      ctx.fillStyle = fgColor;\n      var radius = cellSize / 2;\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones) && !(removeQrCodeBehindLogo && this.isCoordinateInImage(row, col, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage))) {\n            ctx.beginPath();\n            ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, radius / 100 * 75, 0, 2 * Math.PI, false);\n            ctx.closePath();\n            ctx.fill();\n          }\n        }\n      }\n    } else {\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones) && !(removeQrCodeBehindLogo && this.isCoordinateInImage(row, col, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage))) {\n            ctx.fillStyle = fgColor;\n            var w = Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize);\n            var h = Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize);\n            ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\n          }\n        }\n      }\n    }\n    // Draw positioning patterns\n    for (var i = 0; i < 3; i++) {\n      var _b = positioningZones[i],\n        row = _b.row,\n        col = _b.col;\n      var radii = eyeRadius;\n      var color = void 0;\n      if (Array.isArray(radii)) {\n        radii = radii[i];\n      }\n      if (typeof radii == 'number') {\n        radii = [radii, radii, radii, radii];\n      }\n      if (!eyeColor) {\n        // if not specified, eye color is the same as foreground, \n        color = fgColor;\n      } else {\n        if (Array.isArray(eyeColor)) {\n          // if array, we pass the single color\n          color = eyeColor[i];\n        } else {\n          color = eyeColor;\n        }\n      }\n      this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\n    }\n    if (logoImage) {\n      var image_1 = new Image();\n      if (enableCORS) {\n        image_1.crossOrigin = 'Anonymous';\n      }\n      image_1.onload = function () {\n        ctx.save();\n        ctx.globalAlpha = logoOpacity;\n        ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\n        ctx.restore();\n      };\n      image_1.src = logoImage;\n    }\n  };\n  QRCode.prototype.render = function () {\n    var _a;\n    var size = +this.props.size + 2 * +this.props.quietZone;\n    return React.createElement('canvas', {\n      id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo',\n      height: size,\n      width: size,\n      style: {\n        height: size + 'px',\n        width: size + 'px'\n      },\n      ref: this.canvas\n    });\n  };\n  QRCode.defaultProps = {\n    value: 'https://reactjs.org/',\n    ecLevel: 'M',\n    enableCORS: false,\n    size: 150,\n    quietZone: 10,\n    bgColor: '#FFFFFF',\n    fgColor: '#000000',\n    logoOpacity: 1,\n    removeQrCodeBehindLogo: false,\n    qrStyle: 'squares',\n    eyeRadius: [0, 0, 0]\n  };\n  return QRCode;\n}(React.Component);\nexports.QRCode = QRCode;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","QRCode","isEqual","require","qrGenerator","React","ReactDOM","_super","props","_this","call","canvas","createRef","utf16to8","str","out","i","c","len","length","charCodeAt","charAt","String","fromCharCode","drawRoundedSquare","lineWidth","x","y","size","color","radii","fill","ctx","fillStyle","strokeStyle","isArray","map","r","Math","min","rTopLeft","rTopRight","rBottomRight","rBottomLeft","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","drawPositioningPattern","cellSize","offset","row","col","ceil","radiiOuter","radiiInner","outer","inner","colorOuter","colorInner","isInPositioninZone","zones","some","zone","transformPixelLengthIntoNumberOfCells","pixelLength","isCoordinateInImage","dWidthLogo","dHeightLogo","dxLogo","dyLogo","logoImage","numberOfCellsMargin","firstRowOfLogo","firstColumnOfLogo","logoWidthInCells","logoHeightInCells","shouldComponentUpdate","nextProps","componentDidMount","update","componentDidUpdate","_a","ecLevel","enableCORS","quietZone","bgColor","fgColor","logoWidth","logoHeight","logoOpacity","removeQrCodeBehindLogo","qrStyle","eyeRadius","eyeColor","qrCode","addData","make","findDOMNode","current","getContext","canvasSize","getModuleCount","scale","window","devicePixelRatio","height","width","fillRect","positioningZones","radius","isDark","arc","round","PI","w","floor","h","_b","image_1","Image","crossOrigin","onload","save","globalAlpha","drawImage","restore","src","render","createElement","id","style","ref","defaultProps","Component"],"sources":["/Users/bmb/Documents/project/BookMeTicket/node_modules/react-qrcode-logo/dist/index.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.QRCode = void 0;\r\nvar isEqual = require(\"lodash.isequal\");\r\nvar qrGenerator = require(\"qrcode-generator\");\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar QRCode = /** @class */ (function (_super) {\r\n    __extends(QRCode, _super);\r\n    function QRCode(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.canvas = React.createRef();\r\n        return _this;\r\n    }\r\n    QRCode.utf16to8 = function (str) {\r\n        var out = '', i, c;\r\n        var len = str.length;\r\n        for (i = 0; i < len; i++) {\r\n            c = str.charCodeAt(i);\r\n            if ((c >= 0x0001) && (c <= 0x007F)) {\r\n                out += str.charAt(i);\r\n            }\r\n            else if (c > 0x07FF) {\r\n                out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\r\n                out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\r\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\r\n            }\r\n            else {\r\n                out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\r\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n    /**\r\n     * Draw a rounded square in the canvas\r\n     */\r\n    QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = color;\r\n        // Adjust coordinates so that the outside of the stroke is aligned to the edges\r\n        y += lineWidth / 2;\r\n        x += lineWidth / 2;\r\n        size -= lineWidth;\r\n        if (!Array.isArray(radii)) {\r\n            radii = [radii, radii, radii, radii];\r\n        }\r\n        // Radius should not be greater than half the size or less than zero\r\n        radii = radii.map(function (r) {\r\n            r = Math.min(r, size / 2);\r\n            return (r < 0) ? 0 : r;\r\n        });\r\n        var rTopLeft = radii[0] || 0;\r\n        var rTopRight = radii[1] || 0;\r\n        var rBottomRight = radii[2] || 0;\r\n        var rBottomLeft = radii[3] || 0;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + rTopLeft, y);\r\n        ctx.lineTo(x + size - rTopRight, y);\r\n        if (rTopRight)\r\n            ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\r\n        ctx.lineTo(x + size, y + size - rBottomRight);\r\n        if (rBottomRight)\r\n            ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\r\n        ctx.lineTo(x + rBottomLeft, y + size);\r\n        if (rBottomLeft)\r\n            ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\r\n        ctx.lineTo(x, y + rTopLeft);\r\n        if (rTopLeft)\r\n            ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        if (fill) {\r\n            ctx.fill();\r\n        }\r\n    };\r\n    /**\r\n     * Draw a single positional pattern eye.\r\n     */\r\n    QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\r\n        if (radii === void 0) { radii = [0, 0, 0, 0]; }\r\n        var lineWidth = Math.ceil(cellSize);\r\n        var radiiOuter;\r\n        var radiiInner;\r\n        if (typeof radii !== 'number' && !Array.isArray(radii)) {\r\n            radiiOuter = radii.outer || 0;\r\n            radiiInner = radii.inner || 0;\r\n        }\r\n        else {\r\n            radiiOuter = radii;\r\n            radiiInner = radiiOuter;\r\n        }\r\n        var colorOuter;\r\n        var colorInner;\r\n        if (typeof color !== 'string') {\r\n            colorOuter = color.outer;\r\n            colorInner = color.inner;\r\n        }\r\n        else {\r\n            colorOuter = color;\r\n            colorInner = color;\r\n        }\r\n        var y = (row * cellSize) + offset;\r\n        var x = (col * cellSize) + offset;\r\n        var size = cellSize * 7;\r\n        // Outer box\r\n        this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx);\r\n        // Inner box\r\n        size = cellSize * 3;\r\n        y += cellSize * 2;\r\n        x += cellSize * 2;\r\n        this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\r\n    };\r\n    ;\r\n    /**\r\n     * Is this dot inside a positional pattern zone.\r\n     */\r\n    QRCode.prototype.isInPositioninZone = function (col, row, zones) {\r\n        return zones.some(function (zone) { return (row >= zone.row && row <= zone.row + 7 &&\r\n            col >= zone.col && col <= zone.col + 7); });\r\n    };\r\n    QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\r\n        return pixelLength / cellSize;\r\n    };\r\n    QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\r\n        if (logoImage) {\r\n            var numberOfCellsMargin = 2;\r\n            var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\r\n            var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\r\n            var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\r\n            var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\r\n            return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\r\n                && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    QRCode.prototype.shouldComponentUpdate = function (nextProps) {\r\n        return !isEqual(this.props, nextProps);\r\n    };\r\n    QRCode.prototype.componentDidMount = function () {\r\n        this.update();\r\n    };\r\n    QRCode.prototype.componentDidUpdate = function () {\r\n        this.update();\r\n    };\r\n    QRCode.prototype.update = function () {\r\n        var _a = this.props, value = _a.value, ecLevel = _a.ecLevel, enableCORS = _a.enableCORS, size = _a.size, quietZone = _a.quietZone, bgColor = _a.bgColor, fgColor = _a.fgColor, logoImage = _a.logoImage, logoWidth = _a.logoWidth, logoHeight = _a.logoHeight, logoOpacity = _a.logoOpacity, removeQrCodeBehindLogo = _a.removeQrCodeBehindLogo, qrStyle = _a.qrStyle, eyeRadius = _a.eyeRadius, eyeColor = _a.eyeColor;\r\n        var qrCode = qrGenerator(0, ecLevel);\r\n        qrCode.addData(QRCode.utf16to8(value));\r\n        qrCode.make();\r\n        var canvas = ReactDOM.findDOMNode(this.canvas.current);\r\n        var ctx = canvas.getContext('2d');\r\n        var canvasSize = +size + (2 * +quietZone);\r\n        var length = qrCode.getModuleCount();\r\n        var cellSize = size / length;\r\n        var scale = (window.devicePixelRatio || 1);\r\n        canvas.height = canvas.width = canvasSize * scale;\r\n        ctx.scale(scale, scale);\r\n        ctx.fillStyle = bgColor;\r\n        ctx.fillRect(0, 0, canvasSize, canvasSize);\r\n        var offset = +quietZone;\r\n        var dWidthLogo = logoWidth || size * 0.2;\r\n        var dHeightLogo = logoHeight || dWidthLogo;\r\n        var dxLogo = ((size - dWidthLogo) / 2);\r\n        var dyLogo = ((size - dHeightLogo) / 2);\r\n        var positioningZones = [\r\n            { row: 0, col: 0 },\r\n            { row: 0, col: length - 7 },\r\n            { row: length - 7, col: 0 },\r\n        ];\r\n        ctx.strokeStyle = fgColor;\r\n        if (qrStyle === 'dots') {\r\n            ctx.fillStyle = fgColor;\r\n            var radius = cellSize / 2;\r\n            for (var row = 0; row < length; row++) {\r\n                for (var col = 0; col < length; col++) {\r\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones) && !(removeQrCodeBehindLogo && this.isCoordinateInImage(row, col, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage))) {\r\n                        ctx.beginPath();\r\n                        ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, (radius / 100) * 75, 0, 2 * Math.PI, false);\r\n                        ctx.closePath();\r\n                        ctx.fill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var row = 0; row < length; row++) {\r\n                for (var col = 0; col < length; col++) {\r\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones) && !(removeQrCodeBehindLogo && this.isCoordinateInImage(row, col, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage))) {\r\n                        ctx.fillStyle = fgColor;\r\n                        var w = (Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize));\r\n                        var h = (Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize));\r\n                        ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Draw positioning patterns\r\n        for (var i = 0; i < 3; i++) {\r\n            var _b = positioningZones[i], row = _b.row, col = _b.col;\r\n            var radii = eyeRadius;\r\n            var color = void 0;\r\n            if (Array.isArray(radii)) {\r\n                radii = radii[i];\r\n            }\r\n            if (typeof radii == 'number') {\r\n                radii = [radii, radii, radii, radii];\r\n            }\r\n            if (!eyeColor) { // if not specified, eye color is the same as foreground, \r\n                color = fgColor;\r\n            }\r\n            else {\r\n                if (Array.isArray(eyeColor)) { // if array, we pass the single color\r\n                    color = eyeColor[i];\r\n                }\r\n                else {\r\n                    color = eyeColor;\r\n                }\r\n            }\r\n            this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\r\n        }\r\n        if (logoImage) {\r\n            var image_1 = new Image();\r\n            if (enableCORS) {\r\n                image_1.crossOrigin = 'Anonymous';\r\n            }\r\n            image_1.onload = function () {\r\n                ctx.save();\r\n                ctx.globalAlpha = logoOpacity;\r\n                ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\r\n                ctx.restore();\r\n            };\r\n            image_1.src = logoImage;\r\n        }\r\n    };\r\n    QRCode.prototype.render = function () {\r\n        var _a;\r\n        var size = +this.props.size + (2 * +this.props.quietZone);\r\n        return React.createElement('canvas', {\r\n            id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo',\r\n            height: size,\r\n            width: size,\r\n            style: { height: size + 'px', width: size + 'px' },\r\n            ref: this.canvas\r\n        });\r\n    };\r\n    QRCode.defaultProps = {\r\n        value: 'https://reactjs.org/',\r\n        ecLevel: 'M',\r\n        enableCORS: false,\r\n        size: 150,\r\n        quietZone: 10,\r\n        bgColor: '#FFFFFF',\r\n        fgColor: '#000000',\r\n        logoOpacity: 1,\r\n        removeQrCodeBehindLogo: false,\r\n        qrStyle: 'squares',\r\n        eyeRadius: [0, 0, 0]\r\n    };\r\n    return QRCode;\r\n}(React.Component));\r\nexports.QRCode = QRCode;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}